"use client";

import apiClient from "../base/ApiClient";

class CategoriesServiceClient {
  constructor() {
    this.client = apiClient;

    // —Å—Ç–∞—Ç–∏—á–Ω—ã–π fallback
    this.staticCategories = [
      {
        id: "expert",
        name: "Ot√°zka expertovi",
        slug: "expert",
        description: "Finanƒçn√© ot√°zky pre odborn√≠kov a expertov",
        icon: "üë®‚Äçüíº",
        questionsCount: 0,
      },
      {
        id: "lawyer",
        name: "Ot√°zka pr√°vnikovi",
        slug: "lawyer",
        description: "Pr√°vne ot√°zky a pr√°vne poradenstvo",
        icon: "‚öñÔ∏è",
        questionsCount: 0,
      },
    ];
  }

  // === CLIENT-SIDE ===

  async getAll(withStats = false) {
    try {
      // –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ API —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π:
      // return this.client.get(`/categories${withStats ? '?stats=true' : ''}`);
      return this.staticCategories;
    } catch (e) {
      if (process.env.NODE_ENV === "development") {
        console.warn(
          "[CategoriesServiceClient.getAll] fallback to static:",
          e.message
        );
      }
      return this.staticCategories;
    }
  }

  async getBySlug(slug) {
    // –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ API:
    // return this.client.get(`/categories/${slug}`);
    const category = this.staticCategories.find((c) => c.slug === slug);
    if (!category) {
      const err = new Error("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
      err.status = 404;
      throw err;
    }
    return category;
  }

  async getPopular(limit = 2) {
    const all = await this.getAll(true);
    return all
      .sort((a, b) => (b.questionsCount || 0) - (a.questionsCount || 0))
      .slice(0, limit);
  }

  // === ADMIN (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—à—å —Ä–µ–∞–ª—å–Ω—ã–π API) ===
  async updateCategoryStats(slug, questionsCount) {
    // –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–º API:
    // await this.client.put(`/categories/${slug}/stats`, { questionsCount });
    const i = this.staticCategories.findIndex((c) => c.slug === slug);
    if (i !== -1) this.staticCategories[i].questionsCount = questionsCount;
    return { success: true };
  }

  // === –£–¢–ò–õ–ò–¢–´ (—á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏) ===
  getCategoryName(slug) {
    const c = this.staticCategories.find((cat) => cat.slug === slug);
    return c ? c.name : slug;
  }

  getCategoryIcon(slug) {
    const c = this.staticCategories.find((cat) => cat.slug === slug);
    return c ? c.icon : "‚ùì";
  }

  categoryExists(slug) {
    return this.staticCategories.some((cat) => cat.slug === slug);
  }

  getCategoryBreadcrumbs(slug) {
    const c = this.staticCategories.find((cat) => cat.slug === slug);
    if (!c) {
      return [
        { name: "FastCredit", href: "/" },
        { name: "F√≥rum", href: "/" },
        { name: "Nezn√°ma kateg√≥ria", href: `//categories/${slug}` },
      ];
    }
    return [
      { name: "FastCredit", href: "/" },
      { name: "F√≥rum", href: "/" },
      { name: c.name, href: `//categories/${slug}` },
    ];
  }

  getCategoryMetadata(slug) {
    const c = this.staticCategories.find((cat) => cat.slug === slug);
    if (!c) {
      return {
        title: "Nezn√°ma kateg√≥ria - FastCredit F√≥rum",
        description: "Kateg√≥ria nebola n√°jden√°",
        keywords: "fastcredit, forum",
      };
    }
    return {
      title: `${c.name} - FastCredit F√≥rum`,
      description: c.description,
      keywords: `${c.name.toLowerCase()}, fastcredit, forum, ot√°zky, odpovede`,
    };
  }
}

export default new CategoriesServiceClient();
