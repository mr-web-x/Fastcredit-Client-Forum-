// –§–∞–π–ª: src/features/ProfilePage/ProfileForm/ProfileForm.jsx

"use client";

import { useActionState, useEffect } from "react";
import { updateProfileAction } from "@/app/actions/auth";
import "./ProfileForm.scss";

export default function ProfileForm({ user, onSuccess }) {
  const [state, formAction, isPending] = useActionState(
    updateProfileAction,
    null
  );

  // –í—ã–∑—ã–≤–∞–µ–º onSuccess –∫–æ–≥–¥–∞ —Ñ–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
  useEffect(() => {
    if (state?.success) {
      onSuccess?.();
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º success —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      const timer = setTimeout(() => {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      }, 5000);
      return () => clearTimeout(timer);
    }
  }, [state?.success, onSuccess]);

  return (
    <div className="profile-form">
      <div className="profile-form__card">
        <div className="profile-form__header">
          <h2 className="profile-form__title">
            <span className="profile-form__title-icon">‚úèÔ∏è</span>
            Upravi≈• profil
          </h2>
          <p className="profile-form__description">
            Aktualizujte svoje osobn√© √∫daje a inform√°cie o profile
          </p>
        </div>

        <form action={formAction} className="profile-form__form">
          {/* –û–±—â–∞—è –æ—à–∏–±–∫–∞ */}
          {state?.error && (
            <div className="profile-form__error-banner">
              <span className="profile-form__error-icon">‚ö†Ô∏è</span>
              <div>
                <strong>Chyba pri aktualiz√°cii profilu</strong>
                <p>{state.error}</p>
              </div>
            </div>
          )}

          <div className="profile-form__row">
            {/* –ò–º—è */}
            <div className="profile-form__field">
              <label htmlFor="firstName" className="profile-form__label">
                Meno
              </label>
              <input
                id="firstName"
                type="text"
                name="firstName"
                placeholder="Va≈°e meno"
                defaultValue={user.firstName || ""}
                className={`profile-form__input ${
                  state?.fieldErrors?.firstName
                    ? "profile-form__input--error"
                    : ""
                }`}
                disabled={isPending}
                autoComplete="given-name"
                maxLength={50}
              />
              {state?.fieldErrors?.firstName && (
                <div className="profile-form__field-error">
                  {state.fieldErrors.firstName}
                </div>
              )}
            </div>

            {/* –§–∞–º–∏–ª–∏—è */}
            <div className="profile-form__field">
              <label htmlFor="lastName" className="profile-form__label">
                Priezvisko
              </label>
              <input
                id="lastName"
                type="text"
                name="lastName"
                placeholder="Va≈°e priezvisko"
                defaultValue={user.lastName || ""}
                className={`profile-form__input ${
                  state?.fieldErrors?.lastName
                    ? "profile-form__input--error"
                    : ""
                }`}
                disabled={isPending}
                autoComplete="family-name"
                maxLength={50}
              />
              {state?.fieldErrors?.lastName && (
                <div className="profile-form__field-error">
                  {state.fieldErrors.lastName}
                </div>
              )}
            </div>
          </div>

          {/* Username */}
          <div className="profile-form__field">
            <label htmlFor="username" className="profile-form__label">
              Pou≈æ√≠vateƒæsk√© meno
            </label>
            <input
              id="username"
              type="text"
              name="username"
              placeholder="Va≈°e pou≈æ√≠vateƒæsk√© meno"
              defaultValue={user.username || ""}
              className={`profile-form__input ${
                state?.fieldErrors?.username ? "profile-form__input--error" : ""
              }`}
              disabled={isPending}
              autoComplete="username"
              maxLength={30}
              pattern="^[a-zA-Z0-9_-]+$"
              title="Pou≈æ√≠vateƒæsk√© meno m√¥≈æe obsahova≈• len p√≠smen√°, ƒç√≠slice, pomlƒçky a podtr≈æ√≠tka"
            />
            {state?.fieldErrors?.username && (
              <div className="profile-form__field-error">
                {state.fieldErrors.username}
              </div>
            )}
            <div className="profile-form__field-help">
              M√¥≈æe obsahova≈• len p√≠smen√°, ƒç√≠slice, pomlƒçky a podtr≈æ√≠tka
            </div>
          </div>

          {/* Email (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) */}
          <div className="profile-form__field">
            <label htmlFor="email" className="profile-form__label">
              Email
            </label>
            <input
              id="email"
              type="email"
              value={user.email}
              className="profile-form__input profile-form__input--disabled"
              disabled
              readOnly
            />
            <div className="profile-form__field-help">
              Email nie je mo≈æn√© zmeni≈•. Pre zmenu kontaktujte podporu.
            </div>
          </div>

          {/* Bio */}
          <div className="profile-form__field">
            <label htmlFor="bio" className="profile-form__label">
              O mne
            </label>
            <textarea
              id="bio"
              name="bio"
              placeholder="Nap√≠≈°te nieƒço o sebe..."
              defaultValue={user.bio || ""}
              className={`profile-form__textarea ${
                state?.fieldErrors?.bio ? "profile-form__textarea--error" : ""
              }`}
              disabled={isPending}
              maxLength={500}
              rows={4}
            />
            {state?.fieldErrors?.bio && (
              <div className="profile-form__field-error">
                {state.fieldErrors.bio}
              </div>
            )}
            <div className="profile-form__field-help">Maxim√°lne 500 znakov</div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="profile-form__additional-info">
            <h3 className="profile-form__section-title">
              <span className="profile-form__section-icon">üìã</span>
              Dodatoƒçn√© inform√°cie
            </h3>

            <div className="profile-form__info-grid">
              <div className="profile-form__info-item">
                <span className="profile-form__info-label">Rola:</span>
                <span
                  className={`profile-form__role-badge profile-form__role-badge--${user.role}`}
                >
                  {user.role === "user" && "üë§ Pou≈æ√≠vateƒæ"}
                  {user.role === "expert" && "üë®‚Äçüíº Expert"}
                  {user.role === "moderator" && "üõ°Ô∏è Moder√°tor"}
                  {user.role === "admin" && "‚öôÔ∏è Administr√°tor"}
                </span>
              </div>

              <div className="profile-form__info-item">
                <span className="profile-form__info-label">Stav √∫ƒçtu:</span>
                <span
                  className={`profile-form__status-badge ${
                    user.isActive
                      ? "profile-form__status-badge--active"
                      : "profile-form__status-badge--inactive"
                  }`}
                >
                  {user.isActive ? "‚úÖ Akt√≠vny" : "‚õî Neakt√≠vny"}
                </span>
              </div>

              <div className="profile-form__info-item">
                <span className="profile-form__info-label">Email stav:</span>
                <span
                  className={`profile-form__status-badge ${
                    user.isEmailVerified
                      ? "profile-form__status-badge--verified"
                      : "profile-form__status-badge--unverified"
                  }`}
                >
                  {user.isEmailVerified ? "‚úÖ Overen√Ω" : "‚ö†Ô∏è Neoveren√Ω"}
                </span>
              </div>

              <div className="profile-form__info-item">
                <span className="profile-form__info-label">Registr√°cia:</span>
                <span className="profile-form__info-value">
                  {new Date(user.createdAt).toLocaleDateString("sk-SK")}
                </span>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="profile-form__actions">
            <button
              type="submit"
              disabled={isPending}
              className={`profile-form__submit-btn ${
                isPending ? "profile-form__submit-btn--loading" : ""
              }`}
            >
              {isPending ? (
                <>
                  <span className="profile-form__loading-spinner"></span>
                  Uklad√° sa...
                </>
              ) : (
                <>
                  <span>üíæ</span>
                  Ulo≈æi≈• zmeny
                </>
              )}
            </button>

            <button
              type="reset"
              disabled={isPending}
              className="profile-form__reset-btn"
              onClick={() => {
                // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∫ –∏—Å—Ö–æ–¥–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
                const form = document.querySelector(".profile-form__form");
                if (form) {
                  form.reset();
                }
              }}
            >
              <span>‚Ü©Ô∏è</span>
              Resetova≈•
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
