// –§–∞–π–ª: app/actions/answers.js
"use server";

import { revalidatePath } from "next/cache";
import { getServerUser } from "@/src/lib/auth-server";

/**
 * Server Action –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
 */
export async function createAnswerAction(questionId, answerData) {
  try {
    const currentUser = await getServerUser();
    if (!currentUser) {
      return {
        success: false,
        error: "Mus√≠te sa prihl√°si≈• pre pridanie odpovede",
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ - —Ç–æ–ª—å–∫–æ —ç–∫—Å–ø–µ—Ä—Ç—ã, –∞–¥–º–∏–Ω—ã, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã
    const allowedRoles = ["expert", "lawyer", "admin", "moderator"];
    if (!allowedRoles.includes(currentUser.role)) {
      return {
        success: false,
        error: "Nem√°te opr√°vnenie pre pridanie odpovede",
      };
    }

    if (!questionId) {
      throw new Error("ID ot√°zky je povinn√©");
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞
    const { content } = answerData;
    if (!content || content.trim().length < 50) {
      return {
        success: false,
        error: "Odpoveƒè mus√≠ ma≈• aspo≈à 50 znakov",
      };
    }

    if (content.length > 5000) {
      return {
        success: false,
        error: "Odpoveƒè m√¥≈æe ma≈• maxim√°lne 5000 znakov",
      };
    }

    console.log(`üìù Creating answer:`, {
      questionId,
      userId: currentUser.id,
      userRole: currentUser.role,
      contentLength: content.length,
    });

    const backendUrl =
      process.env.NEXT_PUBLIC_API_URL || "http://localhost:3001/api";
    const { cookies } = await import("next/headers");
    const cookieStore = await cookies();
    const jwtCookie = cookieStore.get("fc_jwt");

    if (!jwtCookie?.value) {
      return {
        success: false,
        error: "No authentication token",
      };
    }

    const response = await fetch(
      `${backendUrl}/answers/question/${questionId}`,
      {
        method: "POST",
        headers: {
          Cookie: `fc_jwt=${jwtCookie.value}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          content: content.trim(),
        }),
      }
    );

    const data = await response.json();

    if (!response.ok || !data.success) {
      console.error("‚ùå Failed to create answer:", data.message);
      return {
        success: false,
        error: data.message || "Nepodarilo sa prida≈• odpoveƒè",
      };
    }

    console.log(`‚úÖ Answer created successfully:`, data.data._id);

    // Revalidate —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    revalidatePath("/forum/questions/[slug]", "page");
    revalidatePath("/forum/profile/answers", "page");
    revalidatePath("/forum/profile/all-questions", "page");

    return {
      success: true,
      data: data.data,
      message: "Odpoveƒè bola √∫spe≈°ne pridan√°",
    };
  } catch (error) {
    console.error("‚ùå [createAnswerAction] Error:", error);
    return {
      success: false,
      error: "Chyba servera pri prid√°van√≠ odpovede",
    };
  }
}

/**
 * Server Action –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
 */
export async function updateAnswerAction(answerId, updateData) {
  try {
    const currentUser = await getServerUser();
    if (!currentUser) {
      return {
        success: false,
        error: "Mus√≠te sa prihl√°si≈• pre √∫pravu odpovede",
      };
    }

    if (!answerId) {
      throw new Error("ID odpovede je povinn√©");
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    const { content } = updateData;
    if (!content || content.trim().length < 50) {
      return {
        success: false,
        error: "Odpoveƒè mus√≠ ma≈• aspo≈à 50 znakov",
      };
    }

    if (content.length > 5000) {
      return {
        success: false,
        error: "Odpoveƒè m√¥≈æe ma≈• maxim√°lne 5000 znakov",
      };
    }

    console.log(`‚úèÔ∏è Updating answer:`, {
      answerId,
      userId: currentUser.id,
      contentLength: content.length,
    });

    const backendUrl =
      process.env.NEXT_PUBLIC_API_URL || "http://localhost:3001/api";
    const { cookies } = await import("next/headers");
    const cookieStore = await cookies();
    const jwtCookie = cookieStore.get("fc_jwt");

    if (!jwtCookie?.value) {
      return {
        success: false,
        error: "No authentication token",
      };
    }

    const response = await fetch(`${backendUrl}/answers/${answerId}`, {
      method: "PUT",
      headers: {
        Cookie: `fc_jwt=${jwtCookie.value}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        content: content.trim(),
      }),
    });

    const data = await response.json();

    if (!response.ok || !data.success) {
      console.error("‚ùå Failed to update answer:", data.message);
      return {
        success: false,
        error: data.message || "Nepodarilo sa aktualizova≈• odpoveƒè",
      };
    }

    console.log(`‚úÖ Answer updated successfully`);

    // Revalidate —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    revalidatePath("/forum/questions/[slug]", "page");
    revalidatePath("/forum/profile/answers", "page");

    return {
      success: true,
      data: data.data,
      message: "Odpoveƒè bola √∫spe≈°ne aktualizovan√°",
    };
  } catch (error) {
    console.error("‚ùå [updateAnswerAction] Error:", error);
    return {
      success: false,
      error: "Chyba servera pri aktualiz√°cii odpovede",
    };
  }
}

/**
 * Server Action –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–æ–º
 */
export async function updateApprovedAnswerAction(
  answerId,
  isApproved,
  comment = ""
) {
  try {
    const currentUser = await getServerUser();

    if (!currentUser) {
      return {
        success: false,
        error: "Mus√≠te sa prihl√°si≈• pre moderovanie odpovede",
      };
    }

    // –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
    if (currentUser.role !== "admin") {
      return {
        success: false,
        error: "Nem√°te opr√°vnenie pre moderovanie odpovede",
      };
    }

    if (!answerId) {
      throw new Error("ID odpovede je povinn√©");
    }

    if (typeof isApproved !== "boolean") {
      return {
        success: false,
        error: "Neplatn√° akcia moderovania",
      };
    }

    const backendUrl =
      process.env.NEXT_PUBLIC_API_URL || "http://localhost:3001/api";
    const { cookies } = await import("next/headers");
    const cookieStore = await cookies();
    const jwtCookie = cookieStore.get("fc_jwt");

    if (!jwtCookie?.value) {
      return {
        success: false,
        error: "No authentication token",
      };
    }

    const response = await fetch(`${backendUrl}/answers/${answerId}/moderate`, {
      method: "POST",
      headers: {
        Cookie: `fc_jwt=${jwtCookie.value}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        isApproved,
        comment: comment.trim() || "No comment",
      }),
    });

    const data = await response.json();

    if (!response.ok || !data.success) {
      console.error("‚ùå Failed to moderate answer:", data.message);
      return {
        success: false,
        error: data.message || "Nepodarilo sa moderova≈• odpoveƒè",
      };
    }

    // Revalidate –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    revalidatePath("/forum/questions/[slug]", "page");
    revalidatePath("/forum/profile/new-answers", "page");
    revalidatePath("/forum/profile/answers", "page");

    return {
      success: true,
      data: data.data,
      message: isApproved
        ? "Odpoveƒè bola √∫spe≈°ne schv√°len√°"
        : "Odpoveƒè bola zamietnut√°",
    };
  } catch (error) {
    console.error("‚ùå [moderateAnswerAction] Error:", error);
    return {
      success: false,
      error: "Chyba servera pri moderovan√≠ odpovede",
    };
  }
}

/**
 * Server Action –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
 */
export async function deleteAnswerAction(answerId) {
  try {
    const currentUser = await getServerUser();
    if (!currentUser) {
      return {
        success: false,
        error: "Mus√≠te sa prihl√°si≈• pre zmazanie odpovede",
      };
    }

    if (!answerId) {
      throw new Error("ID odpovede je povinn√©");
    }

    console.log(`üóëÔ∏è Deleting answer:`, {
      answerId,
      userId: currentUser.id,
    });

    const backendUrl =
      process.env.NEXT_PUBLIC_API_URL || "http://localhost:3001/api";
    const { cookies } = await import("next/headers");
    const cookieStore = await cookies();
    const jwtCookie = cookieStore.get("fc_jwt");

    if (!jwtCookie?.value) {
      return {
        success: false,
        error: "No authentication token",
      };
    }

    const response = await fetch(`${backendUrl}/answers/${answerId}`, {
      method: "DELETE",
      headers: {
        Cookie: `fc_jwt=${jwtCookie.value}`,
        "Content-Type": "application/json",
      },
    });

    const data = await response.json();

    if (!response.ok || !data.success) {
      console.error("‚ùå Failed to delete answer:", data.message);
      return {
        success: false,
        error: data.message || "Nepodarilo sa zmaza≈• odpoveƒè",
      };
    }

    console.log(`‚úÖ Answer deleted successfully`);

    // Revalidate —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    revalidatePath("/forum/questions/[slug]", "page");
    revalidatePath("/forum/profile/answers", "page");

    return {
      success: true,
      message: "Odpoveƒè bola √∫spe≈°ne zmazan√°",
    };
  } catch (error) {
    console.error("‚ùå [deleteAnswerAction] Error:", error);
    return {
      success: false,
      error: "Chyba servera pri mazan√≠ odpovede",
    };
  }
}
