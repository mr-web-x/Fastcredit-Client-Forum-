// –§–∞–π–ª: app/profile/users/page.js

import { requireAuth } from "@/src/lib/auth-server";
import { notFound } from "next/navigation";
import { getUsersAction } from "@/app/actions/users";
import UsersPage from "@/src/features/ProfilePage/UsersPage/UsersPage";

export const metadata = {
  title: "Spr√°va pou≈æ√≠vateƒæov | FastCredit Forum",
  description: "Spr√°va a modifik√°cia pou≈æ√≠vateƒæov na FastCredit Forum",
};

export default async function ProfileUsers({ searchParams }) {
  // –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (redirect –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
  const user = await requireAuth();

  // –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (user.role !== "admin") {
    notFound();
  }

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ URL
  const page = Number(searchParams?.page) || 1;
  const limit = Number(searchParams?.limit) || 20;
  const role = searchParams?.role || "";
  const isActive = searchParams?.isActive || "";
  const search = searchParams?.search || "";
  const sortBy = searchParams?.sortBy || "createdAt";

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ Server Action
  let usersData = { items: [], pagination: null };
  let error = null;

  try {
    console.log(`üîç Loading users for admin ${user.id}:`, {
      page,
      limit,
      role,
      isActive,
      search,
      sortBy,
    });

    const result = await getUsersAction({
      page,
      limit,
      role,
      isActive,
      search,
      sortBy,
    });

    if (result.success) {
      usersData = result.data;
    } else {
      error = result.error;
      console.error("‚ùå Failed to load users:", result.error);
    }

    console.log(`‚úÖ Users loaded:`, {
      itemsCount: usersData.items?.length || 0,
      pagination: usersData.pagination,
    });
  } catch (loadError) {
    console.error("‚ùå Server error loading users:", loadError);
    error = "Nepodarilo sa naƒç√≠ta≈• pou≈æ√≠vateƒæov. Sk√∫ste to znovu.";

    // Fallback —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    usersData = {
      items: [],
      pagination: {
        page: 1,
        totalPages: 0,
        totalItems: 0,
        hasNext: false,
        hasPrev: false,
      },
    };
  }

  // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  return (
    <UsersPage
      user={user}
      initialUsers={usersData.items}
      initialPagination={usersData.pagination}
      initialFilters={{
        page,
        limit,
        role,
        isActive,
        search,
        sortBy,
      }}
      error={error}
    />
  );
}
